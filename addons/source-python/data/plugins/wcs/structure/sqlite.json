{
    "create players": "CREATE TABLE IF NOT EXISTS players (id INTEGER PRIMARY KEY AUTOINCREMENT, uniqueid TEXT UNIQUE, name TEXT, current_race TEXT, lastconnect REAL)",
    "create races": "CREATE TABLE IF NOT EXISTS races (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, playerid INTEGER, xp INTEGER DEFAULT 0, level INTEGER DEFAULT 0, unused INTEGER DEFAULT 0)",
    "create skills": "CREATE TABLE IF NOT EXISTS skills (id INTEGER PRIMARY KEY AUTOINCREMENT, name TEXT, race TEXT, playerid INTEGER, level INTEGER DEFAULT 0)",
    "create stats races": "CREATE TABLE IF NOT EXISTS stats_races (id INTEGER PRIMARY KEY AUTOINCREMENT, playerid INTEGER, owner TEXT, key TEXT, value REAL)",
    "create stats items": "CREATE TABLE IF NOT EXISTS stats_items (id INTEGER PRIMARY KEY AUTOINCREMENT, playerid INTEGER, owner TEXT, key TEXT, value REAL)",

    "player offline": "SELECT uniqueid, name FROM players ORDER BY name ASC",
    "player get": "SELECT id, name, current_race, lastconnect FROM players WHERE uniqueid = ?",
    "player insert": "INSERT INTO players (uniqueid, name, current_race, lastconnect) VALUES (?, ?, ?, ?)",
    "player update": "UPDATE players SET name = ?, current_race = ?, lastconnect = ? WHERE id = ?",

    "race get": "SELECT name, xp, level, unused FROM races WHERE playerid = ?",
    "race insert": "INSERT INTO races (name, playerid) VALUES (?, ?)",
    "race update": "UPDATE races SET xp = CASE {} ELSE xp END, level = CASE {} ELSE level END, unused = CASE {} ELSE unused END WHERE playerid = ?",
    "race join": "WHEN name = '{}' THEN {}",

    "skill get": "SELECT name, race, level FROM skills WHERE playerid = ?",
    "skill insert": "INSERT INTO skills (name, race, playerid) VALUES (?, ?, ?)",
    "skill update": "UPDATE skills SET level = CASE {} ELSE level END WHERE playerid = ?",
    "skill join": "WHEN race = '{}' AND name = '{}' THEN {}",

    "stat get": "SELECT owner, key, value FROM stats_{} WHERE playerid = ?",
    "stat insert": "INSERT INTO stats_{} (owner, key, value, playerid) VALUES (?, ?, ?, ?)",
    "stat update": "UPDATE stats_{} SET value = CASE {} ELSE value END WHERE playerid = ?",
    "stat join": "WHEN owner = '{}' AND key = '{}' THEN {}",

    "_rank update": "WITH tmp (uniqueid, name, current_race, total_level) AS (SELECT p.uniqueid, p.name, p.current_race, SUM(r.level) AS total_level FROM races r INNER JOIN players p ON p.id = r.playerid GROUP BY playerid) SELECT tt.uniqueid, tt.name, tt.current_race, tt.total_level, (SELECT count(*)+1 FROM tmp AS t WHERE t.total_level > tt.total_level) AS rank FROM tmp AS tt ORDER BY rank ASC",
    "rank update": "SELECT p.uniqueid, p.name, p.current_race, SUM(r.level) AS total_level FROM races r INNER JOIN players p ON p.id = r.playerid GROUP BY playerid ORDER BY total_level DESC"
}
